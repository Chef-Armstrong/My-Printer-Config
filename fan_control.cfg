[duplicate_pin_override]
pins: PF8, PB0, PA1

#[multi_pin my_controller_fan_pins]
#pins: !nozzle_mcu: PB8, PB1

[fan_generic part]
#pin: multi_pin:my_controller_fan_pins
pin: !nozzle_mcu: PB8
enable_pin: nozzle_mcu:PB6
tachometer_pin: ^nozzle_mcu:PB3
tachometer_poll_interval: 0.0008
max_power: 1.0
cycle_time: 0.0100
hardware_pwm: false

[fan_generic chamber]
pin: PF8
tachometer_pin: ^PC1
tachometer_poll_interval: 0.0008
max_power: 1.0
cycle_time: 0.00004 # 25 kHz
hardware_pwm: true

[fan_generic auxiliary_1]
pin: PA5
cycle_time: 0.0020
hardware_pwm: false

[fan_generic auxiliary_2]
pin: PA4
cycle_time: 0.0200
hardware_pwm: false

[controller_fan hotend]
pin: nozzle_mcu:PB5
tachometer_pin: ^nozzle_mcu:PB4
heater: extruder
stepper: extruder

[controller_fan MCU]
pin: PA1
tachometer_pin: ^PC3
tachometer_poll_interval: 0.0015
max_power: 0.80
cycle_time: 0.00004 # 25 kHz
hardware_pwm: true
heater: extruder, heater_bed
stepper: stepper_y, stepper_x, stepper_z, stepper_z1, stepper_z2

[static_digital_output _bed_mcu_always_on]
pins: PA3

[output_pin LED]
pin:PA6
pwm: True
cycle_time: 0.00004
value: 1

[temperature_sensor nozzle_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: nozzle_mcu
min_temp: 0
max_temp: 125

[temperature_sensor leveling_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: leveling_mcu
min_temp: 0
max_temp: 100

[temperature_fan mcu_temp]
pin: PA1
cycle_time: 0.00004 # 25 kHz
hardware_pwm: true
max_power: 1.0
min_speed: 0.1
max_speed: 1.0
shutdown_speed: 0.0
kick_start_time: 2.0
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 0
max_temp: 65
control: watermark
max_delta: 2
target_temp: 45

[temperature_fan chamber_fan]
pin: PF8
cycle_time: 0.00004 # 25 kHz
hardware_pwm: true
min_power: 0.2
max_power: 1.0
min_speed: 0
max_speed: 1
shutdown_speed: 0.0
kick_start_time: 2.0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB0
min_temp: 0
max_temp: 100
control: watermark
max_delta: 2
target_temp: 35.0

[gcode_macro M106]
description: Set Fan Speed. P0 for part, P1 for chamber, P2 for auxiliary, P3 chamber
gcode:
  {% set fan_map = {0: "part", 1: "chamber", 2: "auxiliary", 3: "chamber"} %}
  {% set fan_id = params.P|default(0)|int %}
  {% set fan = fan_map[fan_id] %}
  {% set speed_param = params.S|default(255)|int %}
  {% if speed_param > 0 %}
    {% set speed = (speed_param|float / 255) %}
  {% else %}
    {% set speed = 0 %}
  {% endif %}
  {% if 'fan_generic ' + fan in printer.configfile.settings %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}
  {% endif %}

[gcode_macro M107]
description: Set Fan Off. P0 for part, P1 for chamber, P2 for auxiliary, P3 chamber
gcode:
  {% set fan_map = {0: "part", 1: "chamber", 2: "auxiliary", 3: "chamber"} %}
  {% set fan_id = params.P|default(0)|int %}
  {% set fan = fan_map[fan_id] %}
  {% if 'fan_generic ' + fan in printer.configfile.settings %}
    SET_FAN_SPEED FAN={fan} SPEED=0
  {% endif %}

[gcode_macro M141]
description: Set Chamber Temperature with slicers
gcode:
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber_fan TARGET={params.S|default(35)}

[gcode_macro M191]
description: Wait for Chamber Temperature to heat up
gcode:
  {% set s = params.S|float %}
  {% set chamber_temp = printer["temperature_fan chamber_fan"].temperature|float %}
  {% if s > 0 %}
    M141 S{s}
  {% endif %}
  {% if s > chamber_temp and s <= 90 %}
    M140 S100
    RESPOND TYPE=command MSG="Waiting for the bed to heat up the chamber..."
    TEMPERATURE_WAIT SENSOR="temperature_fan chamber_fan" MINIMUM={s-1}
    RESPOND TYPE=command MSG="Chamber target temperature reached: {s}Â°C"
    M140 S{s}
  {% endif %}

[gcode_macro TURN_OFF_FANS]
description: Stop chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=0
    {% if 'fan_generic chamber' in printer.configfile.settings %}
      SET_FAN_SPEED FAN=chamber SPEED=0
    {% endif %}
    {% if 'fan_generic auxiliary' in printer.configfile.settings %}
      SET_FAN_SPEED FAN=auxiliary SPEED=0
    {% endif %}


[gcode_macro TURN_ON_FANS]
description: Turn on chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=1
    {% if 'fan_generic chamber' in printer.configfile.settings %}
      SET_FAN_SPEED FAN=chamber SPEED=1
    {% endif %}
    {% if 'fan_generic auxiliary' in printer.configfile.settings %}
      SET_FAN_SPEED FAN=auxiliary SPEED=1
    {% endif %}
