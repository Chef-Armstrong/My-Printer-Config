########################################
# Input shaper configuration
########################################

[adxl345]
cs_pin: cartographer:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 350
probe_points:
    25, 70, 25
    69.75, 70, 25
    114.5, 70, 25
    159.25, 70, 25
    185, 70, 25
    25, 86.25, 25
    69.75, 86.25, 25
    114.5, 86.25, 25
    159.25, 86.25, 25
    185, 86.25, 25
    25, 115, 25
    69.75, 115, 25
    114.5, 115, 25
    159.25, 115, 25
    185, 115, 25
    25, 168.75, 25
    69.75, 168.75, 25
    114.5, 168.75, 25
    159.25, 168.75, 25
    185, 168.75, 25
    25, 185, 25
    69.75, 185, 25
    114.5, 185, 25
    159.25, 185, 25
    185, 185, 25
min_freq: 30
max_freq: 155
sweeping_accel: 350
sweeping_period: 1.2

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 103.2
shaper_type_y = ei
shaper_freq_y = 90.6
enabled_extruders = extruder

[gcode_macro INPUT_SHAPER]
description: Run shaper calibrate and choose default shapers
gcode:
    SHAPER_CALIBRATE

[gcode_macro INPUT_SHAPER_GRAPHS]
description: Generate Input Shaper Graphs
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  TEST_RESONANCES AXIS=X NAME=a
  M400
  TEST_RESONANCES AXIS=Y NAME=b
  M400
  RUN_SHELL_COMMAND CMD=calibrate_shaper_X
  RUN_SHELL_COMMAND CMD=calibrate_shaper_Y

[gcode_shell_command calibrate_shaper_X]
command: /home/klipper/klippy-env/bin/python /home/klipper/klipper/scripts/calibrate_shaper.py --shapers zv,zvd,mzv,ei,2hump_ei,3hump_ei,smooth_zv,smooth_zvd_ei,smooth_2hump_ei /tmp/resonances_x_a.csv -o /home/klipper/printer_K1_data/config/resonances_x.png
timeout: 600.0
verbose: True

[gcode_shell_command calibrate_shaper_Y]
command: /home/klipper/klippy-env/bin/python /home/klipper/klipper/scripts/calibrate_shaper.py --shapers zv,zvd,mzv,ei,2hump_ei,3hump_ei,smooth_zv,smooth_zvd_ei,smooth_2hump_ei /tmp/resonances_y_b.csv -o /home/klipper/printer_K1_data/config/resonances_y.png
timeout: 600.0
verbose: True

[gcode_macro EXCITATE_AXIS_AT_FREQUENCY]
description: Maintain a specified excitation frequency for a period of time to diagnose and locate a source of vibration
gcode:
  {% set frequency = params.FREQUENCY|default(25)|int %}
  {% set time = params.TIME|default(10)|int %}
  {% set axis = params.AXIS|default("x")|string|lower %}

  {% if axis not in ["x", "y", "a", "b"] %}
      { action_raise_error("AXIS selection invalid. Should be either x, y, a or b!") }
  {% endif %}

  {% if axis == "a" %}
      {% set axis = "1,-1" %}
  {% elif axis == "b" %}
      {% set axis = "1,1" %}
  {% endif %}

  TEST_RESONANCES OUTPUT=raw_data AXIS={axis} FREQ_START={frequency-1} FREQ_END={frequency+1} HZ_PER_SEC={1/(time/3)}
  M400

[shaketune]
result_folder: /home/klipper/printer_K1_data/config/Input Shaper/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

########################################
# Unused
########################################
#[adxl345]
#cs_pin: nozzle_mcu:PA4
#spi_speed: 5000000
#axes_map: x,-z,y
#spi_software_sclk_pin: nozzle_mcu:PA5
#spi_software_mosi_pin: nozzle_mcu:PA7
#spi_software_miso_pin: nozzle_mcu:PA6