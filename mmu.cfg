########################################
# Toolchange motors configuration
########################################

[gcode_macro _MMU_PARAMS]
variable_splitter_current: 1.25
gcode:

[gcode_macro _MMU_CURRENT_PARAMS]
variable_splitter_current: 0.65
gcode:

[extruder_stepper T0]
extruder: extruder
step_pin: PA8
dir_pin: !PC7
enable_pin: !PC9
rotation_distance: 23
microsteps: 32
gear_ratio: 50:17
pressure_advance: 0.04
pressure_advance_smooth_time: 0.01

[autotune_tmc extruder_stepper T0]
motor: omc-17hs19-2004s1
tuning_goal: performance
extra_hysteresis: 0
TBL: 2
TOFF: 5
#sgt: 1
#sg4_thrs: 95
pwm_freq_target: 55e3
voltage: 24
#overvoltage_vth: 0.0 to 60.0

# Motor-10
[extruder_stepper T1]
extruder: extruder
step_pin: PG6
dir_pin: !PC6
enable_pin: !PC8
rotation_distance: 23
microsteps: 32
gear_ratio: 50:17
pressure_advance: 0.04
pressure_advance_smooth_time: 0.01

[autotune_tmc extruder_stepper T1]
motor: omc-17hs19-2004s1
tuning_goal: performance
extra_hysteresis: 0
TBL: 2
TOFF: 5
#sgt: 1
#sg4_thrs: 95
pwm_freq_target: 55e3
voltage: 24
#overvoltage_vth: 0.0 to 60.0

########################################
# TMC2209 configuration
########################################

[tmc2209 extruder_stepper T0]
uart_pin: PG8
run_current: 0.8
stealthchop_threshold: 0
sense_resistor: 0.100

[tmc2209 extruder_stepper T1]
uart_pin: PG7
run_current: 0.8
stealthchop_threshold: 0
sense_resistor: 0.100

[gcode_macro _SET_TOOL_HIGH_CURRENT]
description: Temporarily increase current for the active tool motor
gcode:
    {% set tool = params.TOOL|default(printer.save_variables.variables.last_tool)|int %}
    {% set high_current = printer["gcode_macro _MMU_PARAMS"].splitter_current %}
    RESPOND PREFIX="MMU" MSG="Boosting current for T{tool} to {high_current}A"
    SET_TMC_CURRENT STEPPER="T{tool}" CURRENT={high_current}

[gcode_macro _RESTORE_TOOL_CURRENT]
description: Restore run current for the active tool motor
gcode:
    {% set tool = params.TOOL|default(printer.save_variables.variables.last_tool)|int %}
    {% set run_current = printer["gcode_macro _MMU_CURRENT_PARAMS"].splitter_current %}
    RESPOND PREFIX="MMU" MSG="Restoring run current for T{tool} to {run_current}A"
    SET_TMC_CURRENT STEPPER="T{tool}" CURRENT={run_current}


########################################
# MMU configuration
########################################
[filament_switch_sensor filament_cutter]
pause_on_runout: false
switch_pin: nozzle_mcu:PA8

[gcode_macro CUT]
gcode:
  {% set max_retries = 3 %}
  {% set sensor = printer["filament_switch_sensor filament_cutter"] %}
  {% set ns = namespace(cut_success=False) %}
  
  RESPOND PREFIX="CUT" MSG="Starting filament cut sequence"

  {% if "xyz" not in printer.toolhead.homed_axes %}
    RESPOND PREFIX="CUT" MSG="Printer not fully homed, running full home"
    G28
  {% endif %}

  {% if printer.toolhead.position.z < 45 %}
    G0 Z45 F15000
  {% endif %}

  {% for attempt in range(max_retries + 1) %}
    RESPOND PREFIX="CUT" MSG="Cut attempt {attempt + 1} starting"

    G0 Y100 F20000
    G0 X32.5 F20000
    G0 Y227 F20000
    G0 Y220 F6000 
    G0 Y227 F10000
    G0 Y220 F6000 
    G0 Y227 F10000
    G0 Y220 F6000 
    G0 Y227 F10000
    G0 Y220 F6000 
    G0 Y227 F10000
    M400

    {% for cycle in range(40) %}
      M400
      {% if not sensor.filament_detected %}
        RESPOND PREFIX="CUT" MSG="Filament cut successful on attempt {attempt + 1}"
        {% set ns.cut_success = True %}
        {% break %}
      {% endif %}
    {% endfor %}

    G0 Y200 F20000

    {% if ns.cut_success %}
      {% break %}
    {% else %}
      {% if attempt < max_retries %}
        RESPOND PREFIX="CUT" MSG="Cut failed (attempt {attempt + 1}), retrying after X/Y homing"
        G28 X Y
      {% else %}
        RESPOND PREFIX="WARNING" MSG="Filament cutter failed after {max_retries + 1} attempts — performing filament tip shaping"
      {% endif %}
    {% endif %}
  {% endfor %}

  PARTIAL_LOAD_POSITION

  {% if not ns.cut_success %}
    TIP_SHAPING
  {% endif %}

[gcode_macro TIP_SHAPING]
description: Shape filament tip after cut/unload to improve reload reliability and restore original temperature
gcode:
  RESPOND PREFIX="TIP_SHAPING" MSG="Starting filament tip shaping routine"

  {% set temp = printer.extruder.temperature|float %}
  {% set orig_target = printer.extruder.target|float %}
  
  {% if temp < 180 %}
    RESPOND PREFIX="TIP_SHAPING" MSG="Heating nozzle to 210°C for shaping"
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=210
    M109 S210
  {% endif %}

  G91                             ; Relative mode
  G1 E4 F300                      ; Slowly push filament in to melt tip slightly
  G1 E-6 F1200                    ; Quickly retract to draw a sharp end
  G1 E-1 F5000                    ; Fast micro-retract to help form a tapered tip
  G1 E0.5 F300                    ; Soft push to relieve tension
  G90                             ; Absolute mode
  M400

  RESPOND PREFIX="TIP_SHAPING" MSG="Restoring original nozzle temperature to {orig_target}°C"
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={orig_target}

  RESPOND PREFIX="TIP_SHAPING" MSG="Filament tip shaping complete"

[gcode_macro PARTIAL_LOAD_POSITION]
gcode:
   G0 X15 F20000
   G0 Y15 F20000

[gcode_macro PURGE_POSITION]
gcode:
   {% if printer.toolhead.position.z < 45 %}
     G0 Z45 F1500
   {% endif %}
   G0 X150 F20000
   G0 Y227 F20000

[gcode_macro PURGE_AND_CLEAN]
gcode:
   {% if "xyz" not in printer.toolhead.homed_axes %}
       G28
   {% endif %}

   {% set current_z = printer.toolhead.position.z %}
   {% if current_z < 45 %}
     G0 Z45 F3000
     RESPOND PREFIX="PURGE_AND_CLEAN" MSG="Z lifted to 45mm to avoid damage"
   {% endif %}

   G0 X150 F10000
   G0 Y227 F10000
   G90
   G4 P5000
   G0 X170 F10000
   G0 Y200 F10000
   G0 X150 F6000  
   G0 Y227 F3000
   G0 Y200 F10000
   G0 Y227 F3000
   G0 Y200 F10000
   G0 Y227 F3000
   G0 Y200 F10000
   G0 Y227 F3000
   G0 Y200 F10000
   G0 Y227 F3000
   G0 Y200 F10000
   G0 Y227 F3000
   G0 Y200 F10000

[gcode_macro EXTRUDER_UNLOAD]
description: Unload filament from the specified tool
gcode:
  {% set max_tools = printer["gcode_macro TOOLS_CONFIG"].max_tools|int %}
  {% if 'TOOL' not in params %}
    RESPOND PREFIX="ERROR" MSG="TOOL parameter is required for EXTRUDER_UNLOAD"
  {% else %}
    {% set tool = params.TOOL|int %}
    {% if 0 <= tool < max_tools %}
      M400
      _SET_TOOL_HIGH_CURRENT TOOL={tool}
      M400
      SYNC_EXTRUDER_MOTION EXTRUDER=T{tool} MOTION_QUEUE=extruder
      M400
      G92 E0
      G0 E-20 F900
      G92 E0
      M400
      CUT
      M400
      G92 E0
      G0 E-20 F900
      G92 E0
      M400
      G92 E0
      G0 E-400 F6000
      G92 E0
      M400
      SYNC_EXTRUDER_MOTION EXTRUDER=T{tool} MOTION_QUEUE=
      M400
      _RESTORE_TOOL_CURRENT TOOL={tool}
      M400
    {% else %}
      RESPOND PREFIX="ERROR" MSG="Invalid TOOL index: {tool}"
    {% endif %}
  {% endif %}

[gcode_macro EXTRUDER_LOAD]
description: Load filament into the specified tool
gcode:
  {% set max_tools = printer["gcode_macro TOOLS_CONFIG"].max_tools|int %}
  {% if 'TOOL' not in params %}
    RESPOND PREFIX="ERROR" MSG="TOOL parameter is required for EXTRUDER_LOAD"
  {% else %}
    {% set tool = params.TOOL|int %}
    {% if 0 <= tool < max_tools %}  
      M400
      _SET_TOOL_HIGH_CURRENT TOOL={tool}
      M400
      SYNC_EXTRUDER_MOTION EXTRUDER=T{tool} MOTION_QUEUE=extruder
      M400
      G92 E0
      G0 E400 F6000
      G92 E0
      PURGE_POSITION
      M400
      G92 E0
      G0 E45 F600
      G92 E0
      M400
      _RESTORE_TOOL_CURRENT TOOL={tool}
      M400
    {% else %}
      RESPOND PREFIX="ERROR" MSG="Invalid TOOL index: {tool}"
    {% endif %}
  {% endif %}

[gcode_macro TOOL_CHANGE]
description: Handles tool changes between independent BMG extruder motors
gcode:
  {% set max_tools = printer["gcode_macro TOOLS_CONFIG"].max_tools|int %}
  {% set requested_tool = params.TOOL|int %}
  {% set current_tool = printer.save_variables.variables.last_tool|default(0)|int %}
  {% set nozzle_temp = printer.extruder.temperature|float %}
  {% set target_temp = printer.extruder.target|float %}
  {% set saved_z = printer.toolhead.position.z %}
  {% set move_z = 45.0 if saved_z < 45 else saved_z + 15.0 %}

  {% if requested_tool == current_tool %}
    RESPOND TYPE=echo MSG="Tool T{requested_tool} already active. Skipping tool change."
  {% elif requested_tool >= max_tools %}
    RESPOND TYPE=error MSG="Tool index T{requested_tool} exceeds max tools ({max_tools})"
  {% else %}
    RESPOND PREFIX="TOOL_CHANGE" MSG="Switching from T{current_tool} to T{requested_tool}"

    {% if target_temp > 0 and nozzle_temp + 1 < target_temp %}
      RESPOND TYPE=echo MSG="Waiting for nozzle to reach target temp: {nozzle_temp|int}°C → {target_temp|int}°C"
      M109 S{target_temp}
    {% endif %}

    G0 Z{move_z} F3000
    M400
    EXTRUDER_UNLOAD TOOL={current_tool}
    M400
    SAVE_VARIABLE VARIABLE=last_tool VALUE={requested_tool}
    M400
    EXTRUDER_LOAD TOOL={requested_tool}
    M400
    PURGE_AND_CLEAN
    M400

    G0 Z{saved_z} F3000
    RESPOND PREFIX="TOOL_CHANGE" MSG="Tool change to T{requested_tool} complete"
  {% endif %}

[gcode_macro CURRENT_TOOL_STATUS]
gcode:
  RESPOND PREFIX="TOOL" MSG="Currently active tool: T{printer.save_variables.variables.last_tool|default('unknown')}"

[gcode_macro TOOLS_CONFIG]
variable_max_tools: 2
gcode:
  RESPOND TYPE=echo MSG="Max tools configured: 2"

[gcode_macro T0]
gcode: TOOL_CHANGE TOOL=0

[gcode_macro T1]
gcode: TOOL_CHANGE TOOL=1

#[gcode_macro T2]
#gcode: TOOL_CHANGE TOOL=2

#[gcode_macro T3]
#gcode: TOOL_CHANGE TOOL=3

[gcode_macro SELECT_TOOL]
description: Manually select a tool, unsync old and sync new if different
gcode:
  {% set new_tool = params.TOOL|int %}
  {% set old_tool = printer.save_variables.variables.last_tool|default(-1)|int %}
  
  {% if new_tool == old_tool %}
    RESPOND PREFIX="info" MSG="Tool T{new_tool} is already selected."
  {% else %}
    {% if old_tool >= 0 %}
      SYNC_EXTRUDER_MOTION EXTRUDER=T{old_tool} MOTION_QUEUE=
    {% endif %}
    SYNC_EXTRUDER_MOTION EXTRUDER=T{new_tool} MOTION_QUEUE=extruder
    SAVE_VARIABLE VARIABLE=last_tool VALUE={new_tool}
    RESPOND PREFIX="info" MSG="Tool changed from T{old_tool} to T{new_tool} and synced."
  {% endif %}

[gcode_macro UNSYNC_ALL_TOOLS]
gcode:
  {% set max_tools = printer["gcode_macro TOOLS_CONFIG"].max_tools|int %}
  {% for i in range(max_tools) %}
    SYNC_EXTRUDER_MOTION EXTRUDER=T{ i } MOTION_QUEUE=
  {% endfor %}
  RESPOND TYPE=echo MSG="All tool extruders unsynced at startup"

[gcode_macro SYNC_LAST_TOOL]
gcode:
  {% if printer["save_variables"].variables.last_tool is defined %}
    {% set tool = printer["save_variables"].variables.last_tool|int %}
    {% set max_tools = printer["gcode_macro TOOLS_CONFIG"].max_tools|int %}
    {% if tool < max_tools %}
      SYNC_EXTRUDER_MOTION EXTRUDER=T{tool} MOTION_QUEUE=extruder
      RESPOND TYPE=echo MSG="Synced extruder motor for last tool: T{tool}"
    {% else %}
      RESPOND TYPE=echo MSG="Saved tool index T{tool} exceeds max tools; not synced."
    {% endif %}
  {% else %}
    RESPOND TYPE=echo MSG="No last_tool saved in save_variables; no sync performed"
  {% endif %}
